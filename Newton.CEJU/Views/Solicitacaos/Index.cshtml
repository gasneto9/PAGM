@using PagedList.Mvc
@model PagedList.PagedList<Newton.CJU.Models.Solicitacao>

@{
    ViewBag.Title = "Solicitações";
}

<style>
    .cor-linha { background-color: #FFFF00; }
</style>

<h2>Acompanhamento Solicitação</h2>
<br>
@using (Html.BeginForm("Index", "Solicitacaos"))
{
    if (Request.IsAuthenticated)
    {
        if (User.IsInRole("Professor"))
        {
            <div class="row">
                @using (Html.BeginForm())
                {
                    <div class="col-md-2">

                        <p>Data Inicial:</p>
                        @Html.TextBox("datainicial", "", new {@class = "form-control"})
                    </div>
                    <div class="col-md-2">
                        <p>Data Final:</p>
                        @Html.TextBox("datafinal", "", new {@class = "form-control"})
                    </div>

                    <div class="col-md-2">
                        <p>Situação:</p>
                        <select name="situacao" class="form-control">
                            <option value=""></option>
                            <option value="1">Criado</option>
                            <option value="2">Em Analise</option>
                            <option value="3">Aguardando Aceite</option>
                            <option value="4">Respondido</option>
                        </select>
                    </div>

                    <div class="col-md-2">
                        <br>
                        <p></p>
                        <div>
                            <button type="submit" value="pesquisa" class="btn btn-primary">Filtrar</button>
                        </div>

                    </div>

                    <div class="col-md-3">

                    </div>
                    <div class="col-md-3">
                        
                        @*@Html.DropDownList("IdSituacao", new SelectList("Id", "Nome"), " - ", htmlAttributes: new { @class = "form-control" })*@
                        @*Html.DropDownList("FeedType", (SelectList)ViewBag.FeedTypeList)*@
                    </div>
                }
            </div>
        }
    }
}

<br>
<div>
    @if (User.IsInRole("Cliente"))
    {
    <p>
        @Html.ActionLink("Nova Solicitação", "Create")
    </p>
    }
</div>
<table class="table">
    <tr>

        <th>
            @Html.DisplayName("Nº Solicitação")
        </th>

        <th>
            @Html.DisplayName("Data de Cadastro")
        </th>


        @if (Request.IsAuthenticated)
        {
            if (User.IsInRole("Cliente"))
            {
                <th>
                    @Html.DisplayName("Fato Juridico")
                </th>
            }

            if (User.IsInRole("Monitor"))
            {
                <th>
                    @Html.DisplayName("Atividade Semestral")
                </th>
            }

            if (User.IsInRole("Professor"))
            {
                <th>
                    @Html.DisplayName("Atividade Semestral")
                </th>

                <th>
                    @Html.DisplayName("Monitor")
                </th>
            }
        }

        <th>
            @Html.DisplayName("Situação")
        </th>


        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr @(DateTime.Now.Subtract(item.DataCadastro).Days > 7 ? "class=cor-linha" : string.Empty)>

            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.DataCadastro)
            </td>


            @if (Request.IsAuthenticated)
            {
                if (User.IsInRole("Cliente"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.FatoCotidiano.Nome)
                    </td>
                }

                if (User.IsInRole("Monitor"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.AtividadeSemestral.AreaConhecimento.Nome)
                    </td>
                }
                if (User.IsInRole("Professor"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.AtividadeSemestral.AreaConhecimento.Nome)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.UsuarioAluno.Nome)
                    </td>
                }
            }
            <td>
                @item.GetSituacaoDescription()
            </td>
            @if (Request.IsAuthenticated)
            {
                if (User.IsInRole("Professor"))
                {
                    <td>
                        @Html.ActionLink("Editar", "Edit", new {id = item.Id})
                        @Html.DisplayName(" | ")
                        @Html.ActionLink("Detalhes", "Details", new {id = item.Id})
                        @Html.DisplayName(" | ")
                        @Html.ActionLink("Excluir", "Delete", new {id = item.Id})
                    </td>
                }
                if (User.IsInRole("Monitor"))
                {
                    <td>
                        @Html.ActionLink("Editar", "Edit", new {id = item.Id})
                        @Html.DisplayName(" | ")
                        @Html.ActionLink("Detalhes", "Details", new {id = item.Id})

                    </td>
                }
                if (User.IsInRole("Cliente"))
                {
                    <td>
                        @Html.ActionLink("Detalhes", "Details", new {id = item.Id})
                    </td>
                }
            }

        </tr>
    }

</table>

<div class="col-md-12">
    <div class="text-center">
        Página @Model.PageNumber de @Model.PageCount
        @Html.PagedListPager(Model, Page => Url.Action("Index", new {pagina = Page}))
    </div>
</div>