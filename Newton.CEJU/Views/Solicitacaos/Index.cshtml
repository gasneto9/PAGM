@model PagedList.PagedList <Newton.CJU.Models.Solicitacao>
    @using PagedList
    @using PagedList.Mvc
   

@{
    ViewBag.Title = "Solicitações";
}

<style>
    .cor-linha{
        background-color: #FFFF00;
    }
</style>

<h2>Acompanhamento Solicitação</h2>
<br>
<p>
    @Html.ActionLink("Nova Solicitação", "Create")
</p>
<table class="table">
    <tr>
        
        <th>
            @Html.DisplayName("Nº Solicitação")
        </th>

        <th>
            @Html.DisplayName("Data de Cadastro")
        </th>

        <th>
            @Html.DisplayName("Fato Juridico")
        </th>
        @if (Request.IsAuthenticated)
        {
            if (User.IsInRole("Professor"))
            {
                <th>
                    @Html.DisplayName("Monitor")
                </th>
            }
        }

        <th>
            @Html.DisplayName("Situação")
        </th>

       
        <th></th>
    </tr>
@foreach (var item in Model)
{
    <tr @(DateTime.Now.Subtract(item.DataCadastro).Days > 7 ? "class=cor-linha" : String.Empty)>

        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.DataCadastro)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.FatoJuridico)
        </td>

        @if (Request.IsAuthenticated)
        {
            if (User.IsInRole("Professor"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Usuario.Nome)
                </td>
            }
        }
        <td>
            @Html.DisplayFor(modelItem => item.Situacao.Nome)
        </td>


        <td>
            <!-- @Html.ActionLink("Edit", "Edit", new { id=item.Id }) -->
            @Html.ActionLink("Visualizar", "Details", new { id = item.Id })
            <!--   @Html.ActionLink("Delete", "Delete", new { id=item.Id })-->
        </td>
    </tr>
}

</table>

<div class="col-md-12">
    <div class="text-center">
        Página @Model.PageNumber de @Model.PageCount
        @Html.PagedListPager(Model, Page => Url.Action("Index", new { pagina = Page}))
    </div>
</div>